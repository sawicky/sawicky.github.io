<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Friday 22/02/2019 Deliverables</title>
      <link href="/2019/02/22/Friday-22-02-2019-Deliverables/"/>
      <url>/2019/02/22/Friday-22-02-2019-Deliverables/</url>
      
        <content type="html"><![CDATA[<p>For my Friday Deliverables - I have decided to write up my documentation on 2 rooted boxes on HTB, Chaos and Curling. These writeups can be found <a href="/pwn/htb">here</a></p><p>I also submitted a report for the real world example site, but have not yet written up documentation for it.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Week 2 Reflections</title>
      <link href="/2019/02/17/Week-2-Reflections/"/>
      <url>/2019/02/17/Week-2-Reflections/</url>
      
        <content type="html"><![CDATA[<h5 id="February-17-2019-11-34-AM"><a href="#February-17-2019-11-34-AM" class="headerlink" title="February 17 2019, 11:34 AM"></a>February 17 2019, 11:34 AM</h5><p>This week in our Cyber Security studios, we focused a bit more on web application security and penetration, and having a larger emphasis on the definition of our problem statement and the ultimate shape of our portfolio for this subject.</p><p>This week I also started my first professional job, working as an Apex developer, which is the language used in Salesforce CRM products for a small startup, which is an incredibly different environment from working in Help Desk for a law firm generating $1 billion a year. I went from structure, including service management, specialized team management staff, incident management into being thrown in the deep end with an almost unused incident management system. Self study is needed to keep myself afloat in this new job, as while i’m experienced in programming Java already (of which Apex is very similar to), theres still a ton of new concepts that will take my limited time away.</p><p>This sudden dissapearance of my free time, time that is meant to be commited to this subject, has cemented the idea that my time management strategy sucks (ie there is none), and the firsts steps I have taken to rectify this is to begin being more vocal in class if I need more insight in what is to be achieved during the week in terms of milestones, as I think a defined list of milestones is how I best operate.[5]</p><p>An example of this would be spinning up my old VPS and Software Engineering Project, I had a talk with our tutors for cyber sec and I had the idea that I could use this project, insecure as it is, as my learning experience to achieve my SLOs. </p><ul><li>It’s a web application, so it fits in perfectly with the content we’ve been learning the past 2 weeks</li><li>It wasn’t designed to be secure, which highlighted a problem with our SDLC</li><li>I have good understanding of how the entire thing is structured, so nothing will be blind (I know where all the endpoints are, which saves a few hours (at my skill level) with burpsuite)</li><li>I have root access to the server behind the application, so I can always have a look at logs [2][3]</li></ul><p>Another benefit, is that since it’s hosted on a private VPS that I signed a permission form for penetration testing, I could even see if I can pwn my own box as a change of pace.<br>This is still an ongoing idea, and more talk is needed with my tutors, as they ultimately know whether or not my application is viable or not. [1]</p><h3 id="Progress-this-week"><a href="#Progress-this-week" class="headerlink" title="Progress this week"></a>Progress this week</h3><p>I started off this week (on Wednesday) by being asked to present a Problem Statement we have defined the week prior. I blame my poor time management in this case, as I didn’t have any presentation prepared, and my blog write up was still sitting undeployed on my home desktop. The second way I messed up was misinterpreting our tutor’s instructions earlier on how to define a problem statement. I know now that a Problem Statement is what you can present to some CEO of some company, define a problem, what it’ll affect (his bottom lines), and how you’ll fix it, all under 1 minute.</p><p>Since I didn’t have any presentation prepared, I decided to accept my fate and talk about what I studied previously on the weekend, which was about why exactly XSS was so prevalent. You could formulate this to sound like an executive problem statement but I leaned on the technical side. </p><p>By sheer luck, I wasn’t asked to present before the break, so during lunch I slapped together a quick presentation and talked about exactly why XSS was so prevalent. It’s prevalent because of DOM-based XSS attacks being the majority of xss attacks, since they rely solely on human failure by clicking on a crafted link, and exploiting raw text within the DOM processor of a browser. It’s much easier to sanitize stored and reflected XSS, but the threat of a DOM based xss attack is there if you have any user-influenced raw text displayed in a browser at all.</p><p>So I talked about the why, the how and how to fix it, but didn’t talk much about what it might do, since I mistakenly made this a technical presentation, and assumed the audience knew what XSS does. I still managed to fit in the entirety of my presentation in 2:59 with a time limit of 3:00 so I’m happy with that.[4]</p><p>I then studied by tackling a medium-hard level HackTheBox web challenge called I know Mag1k. I did a write up of it <a href="/ctf/htb/">here</a>.</p><p>It exposed me to a whole new level of exploit involving an Oracle attack, new tools and a new path of enumeration for my further studies.</p><h3 id="What’s-Next"><a href="#What’s-Next" class="headerlink" title="What’s Next"></a>What’s Next</h3><p>Next week we’re starting actual box pwning, which means I need to be ahead of it since I’ll also have some crazy work stress to deal with aswell. I need to catch up to Bandit 30, Natas 15 and hopefully pwn the Help machine on Hack the box. I’ll also end up asking the tutors at some point if they have any walkthroughs for retired machines.</p><hr><p>1: SLO 1<br>2: SLO 2<br>3: SLO 3<br>4: SLO 4<br>5: SLO 5</p>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> reflections </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UTS Cyber Security Problem Statement</title>
      <link href="/2019/02/14/UTS-Cyber-Security-Problem-Statement/"/>
      <url>/2019/02/14/UTS-Cyber-Security-Problem-Statement/</url>
      
        <content type="html"><![CDATA[<h3 id="Creating-a-self-hosted-vulnerable-web-target"><a href="#Creating-a-self-hosted-vulnerable-web-target" class="headerlink" title="Creating a self-hosted vulnerable web target"></a>Creating a self-hosted vulnerable web target</h3><p>Last semester, I completed a Software Engineering project and wrote a Node-js app called Mastodon. It was intended to be a UTS registration portal for booking medical appointments with in-faculty medical staff or medical students, as currently the only way to book an appointment is to call a helpline, which can only be reached during business hours.</p><p>The app runs on Node.JS, with no middleware and Mongo for it’s record collection.<br>After researching web exploitation, and understanding that a vast majority of web-related attacks are XSS based, it has helped me formulate a plan to attack my own system using a variety of XSS attacks and tools.</p><p>This can be a strong learning experience, as the app itself was not designed for security in mind barring basic input validation. I have the advantage of knowing exactly how the application is structured internally, and in case I ever get stuck, the app will be hosted on a private VPS that I can share to the class and ask them to rip it apart. I can then check logs to see exactly what damaged they did, and potentially find out how.</p><p>Initial research has brought me to focus on 2 main tools:</p><ul><li>Burpsuite, which I have covered a little bit already on my Hack The Box progress</li><li>BeEF, which is a brand new tool I have 0 experience with, and am invested to learn about.</li></ul><p>The application was constructed after a mentor reviewed design process and Software development lifecycle, which means that this could potentially be a pretty accurate representation of a lower-tier hosted web app, such as a small time shop or blog, that hasn’t had the privilege of an experienced developer who knows how to properly secure a website.</p>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> training </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RDs and Bug Bounties</title>
      <link href="/2019/02/14/RDs-and-Bug-Bounties/"/>
      <url>/2019/02/14/RDs-and-Bug-Bounties/</url>
      
        <content type="html"><![CDATA[<h2 id="Are-you-better-off-killing-insects-for-your-bug-bounties"><a href="#Are-you-better-off-killing-insects-for-your-bug-bounties" class="headerlink" title="Are you better off killing insects for your bug bounties?"></a>Are you better off killing insects for your bug bounties?</h2><h5 id="February-14-2019-8-53-PM"><a href="#February-14-2019-8-53-PM" class="headerlink" title="February 14, 2019, 8:53 PM"></a>February 14, 2019, 8:53 PM</h5><p>A bug bounty is a deal offered by companies in order to tempt security-versed individuals into breaking into their systems with various exploits and vulnerabilities.</p><a href="/media/images/huge-firebounty.jpg"><img src="/media/images/body-firebounty.jpg" alt="The FireBounty main page" title="Zerodium"></a><p>A good range of large companies actually do offer these bounties, there even exists some aggregation websites that will list a bunch of currently available bounties, ranging from $50 to $50,000, or some other questionable websites that will buy your 0 days for up to $2,000,000</p><a href="/media/images/huge-zerodium.png"><img src="/media/images/body-zerodium.png" alt="Zerodium Mobile 0day payouts" title="Zerodium"></a><p>On the flip side, some bug bounty programs exists, such as the Open Bug Bounty community, that relies on people to post whatever disclosure they want, and a good will system encouraging the affected website to pay the reporter.</p><a href="/media/images/huge-openbugbounty.png"><img src="/media/images/body-openbugbounty.png" alt="The open bug bounty form" title="Zerodium"></a><p>Ever since the release of the first bug bounty program in 1995, for the Netscape Navigator browser, there has been a generally positive outcome from these programs. Even the US Government’s Pentagon have their own version of a bug bounty,and in 1 month from April 18 to May 12, 138 unique security flaws were identified, and $71,200 was paid out.</p><a href="/media/images/huge-hackthepentagon.png"><img src="/media/images/body-hackthepentagon.png" alt="The success of Hack The Pentagon" title="Zerodium"></a><p>The only reason these bug bounties are successful is because they usually include a Reasonable Disclosure program.<br>An RD is an agreement between an exploiter and a vendor that the exploit is targeted to in where that vulnerability is only disclosed after a period of time that allows for that vulnerability to be patched. </p><p>A Reasonable Disclosure report format can be used for my Problem Statement in an attempt to emulate the documentation that security researcher or a whitehat will need to write up for any piece of work they may be doing.</p><h4 id="Sources"><a href="#Sources" class="headerlink" title="Sources:"></a>Sources:</h4><p><a href="https://www.mcafee.com/enterprise/en-au/threat-center/advanced-threat-research/disclosure.html" target="_blank" rel="noopener">https://www.mcafee.com/enterprise/en-au/threat-center/advanced-threat-research/disclosure.html</a><br><a href="https://www.cert.gov.au/critical-infrastructure-big-business/report-incident/vulnerability-disclosure-policy" target="_blank" rel="noopener">https://www.cert.gov.au/critical-infrastructure-big-business/report-incident/vulnerability-disclosure-policy</a></p>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> reflections </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF Training</title>
      <link href="/2019/02/13/CTF-Training/"/>
      <url>/2019/02/13/CTF-Training/</url>
      
        <content type="html"><![CDATA[<h2 id="CTF-Training"><a href="#CTF-Training" class="headerlink" title="CTF Training"></a>CTF Training</h2><h5 id="February-9-2019-1-52-PM"><a href="#February-9-2019-1-52-PM" class="headerlink" title="February 9, 2019, 1:52 PM"></a>February 9, 2019, 1:52 PM</h5><p>For this weeks studio progress, I decided to start upon some CTFs and try and start from scratch. My progress is logged <a href="/ctf/">here</a></p>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> training </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSL-on-Github-Pages</title>
      <link href="/2019/02/13/SSL-on-Github-Pages/"/>
      <url>/2019/02/13/SSL-on-Github-Pages/</url>
      
        <content type="html"><![CDATA[<h2 id="Installing-SSL-on-a-Github-Gitlab-pages-static-webpage"><a href="#Installing-SSL-on-a-Github-Gitlab-pages-static-webpage" class="headerlink" title="Installing SSL on a Github/Gitlab pages static webpage"></a>Installing SSL on a Github/Gitlab pages static webpage</h2><h5 id="February-6-2019-12-37-PM"><a href="#February-6-2019-12-37-PM" class="headerlink" title="February 6, 2019, 12:37 PM"></a>February 6, 2019, 12:37 PM</h5><p>Github offers a student education pack, and within that pack also offers 1 free year’s registration on a customized .me TLD alongside a free year of SSL certification.<br>Sounds great right?<br>The problem is, Github is not a web hosting platform and only hosts static web pages at a bare minimum capacity, which means theres no real way to use that SSL certification if you’re using Github hosting. </p><p>You’re going to have to rely on some other service to provide an SSL redirect for you, which namecheap doesn’t provide. </p><p>One such service is Cloudflare, which lets you register a single website for free, which will provide a SSL activated nameserver for your domain, which means for a browser to connect your websites name to an IP address, It’ll ask Cloudflare first.</p><ol><li>Register an account for Cloudflare <a href="https://dash.cloudflare.com/sign-up" target="_blank" rel="noopener">here</a></li><li>Put your .me or .github.io link in the next box<br><img src="/media/images/addsite.jpg" alt="Add your site here"></li><li><p>Let CloudFlare scan current DNS records associated with the domain name, and confirm if they look correct (Look at your Namecheap panel to confirm)</p></li><li><p>Click the free plan, and continue once you see the new records it will apply</p></li><li><p>CloudFlare will then give you 2 nameservers that you’ll need to apply to your registrar (Namecheap in this case) so name resolution requests will go through CloudFlare services instead<br><img src="/media/images/ns.jpg" alt="Your actual nameserver names may be different"></p></li><li><p>Now, pop over to your Namecheap control panel Advanced DNS section<br><img src="/media/images/record.jpg" alt=""></p></li><li><p>Now, replace every CNAME and A record currenty in (but leave MX alone) with this: </p><ul><li>A record for @ pointing to 185.199.108.153 </li><li>A record for @ pointing to 185.199.109.153 </li><li>A record for @ pointing to 185.199.110.153 </li><li>A record for @ pointing to 185.199.111.153 </li><li>CNAME record for www pointing to your username.github.io or username.me domain</li></ul></li><li><p>Save your progress, and head on over to the Nameservers section in your control panel<br><img src="/media/images/editns.jpg" alt=""></p></li><li><p>Choose Custom DNS, and enter the 2 CloudFlare nameservers that were given to you earlier<br><img src="/media/images/editns2.jpg" alt=""></p></li><li><p>After this, you should be all done! Nameserver updates take around an hour, but eventually you’ll be able to access your .me domain with SSL enabled</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Tutorials </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
            <tag> Github </tag>
            
            <tag> Hosting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rokrat</title>
      <link href="/2019/02/13/rokrat/"/>
      <url>/2019/02/13/rokrat/</url>
      
        <content type="html"><![CDATA[<h2 id="CVE-2018-4877-and-the-ROKRAT-Payload"><a href="#CVE-2018-4877-and-the-ROKRAT-Payload" class="headerlink" title="CVE-2018-4877 and the ROKRAT Payload"></a>CVE-2018-4877 and the ROKRAT Payload</h2><h5 id="February-5-2019-5-17-PM"><a href="#February-5-2019-5-17-PM" class="headerlink" title="February 5, 2019, 5:17 PM"></a>February 5, 2019, 5:17 PM</h5><p>We started our Summer Studio on Cyber Security by presenting our own research on a recently exploited vulnerability, it’s avenues of attack, it’s impact and it’s remediation.</p><h3 id="Adobe-Flash-Exploit-CVE-2018-4877"><a href="#Adobe-Flash-Exploit-CVE-2018-4877" class="headerlink" title="Adobe Flash Exploit CVE-2018-4877"></a>Adobe Flash Exploit CVE-2018-4877</h3><p>The CVE-2018-4877 exploit was first reported on the 6th of February 2018, and at the time, Flash was still a core component of most browsers.<br>The vector of attack for this exploit originated via an error in the code module dealing with Media Player handling of listener objects. </p><p>A pointer was used in the code to reference a specific memory address. After this memory is freed, and allocated to another pointer, the original pointer was not freed correctly (IE Probably just set to “” instead of NULL), and thus deferencing this pointer points to somewhere within the new allocation, and corrupts the memory contained within the address.</p><p>This corruption can be manipulated into pointing instead to valid memory address, which could contain the location of valid shellcode, thus allowing the execution or arbitrary code remotely.    </p><p>This exploit was leveraged via an Encapsulated PostScript (EPS) object that was found within a word processor document. The shellcode connects and downloads a payload called ROKRAT from an internet source,<br>disguised as .jpg files.</p><h3 id="The-ROKRAT-Payload"><a href="#The-ROKRAT-Payload" class="headerlink" title="The ROKRAT Payload"></a>The ROKRAT Payload</h3><p>ROKRAT was a HTTP based payload that gathered information about the victim such as keystrokes (via a Keylogger), Running processes, Machine information and<br>BIOS information.<br>It also listened to the attacker’s social media for commands, and was able to receive orders by checking the last message on a Twitter timeline. </p><p>The orders could be either execute a command, move a file, remove a file, kill a process or download and execute a file. </p><p>Yandex, a Russian internet platform was also used by the attackers in this payload as a source of downloadable/executable files as well as the destination to<br>upload any stolen documents.</p><p>Mediafire, a file hosting platform, was used in the same way as Yandex.</p><p>ROKRAT’s impact was significant due to being a completely HTTP based RAT. This is in contrast to a typical RAT which communicates via RDP (Remote Desktop Protocol), which can<br>easily be identified by a corporate firewall and blocked naturally. The 3 social media avenues that ROKRAT used would seldom be blocked by corporate policies, as companies<br>may have a justifiable business case in the use of these networks.</p><h3 id="Forensic-Analysis"><a href="#Forensic-Analysis" class="headerlink" title="Forensic Analysis"></a>Forensic Analysis</h3><p>ROKRAT actively attempted to hide from analysis by running a fake subroutine if it detected a running process that was flagged.</p><p>These flagged processes are below:</p><p><img src="/media/images/rokrat.png" alt="ROKRAT processes"></p><p>If ROKRAT detected any of these processes running, then it would generate fake HTTP traffic by sending HTTP GET requests to 2 sources:<br>.<em> <a href="https://www[.]amazon[.]com/Men-War-PC/dp/B001QZGVEC/EsoftTeam/watchcom.jpg" target="_blank" rel="noopener">https://www[.]amazon[.]com/Men-War-PC/dp/B001QZGVEC/EsoftTeam/watchcom.jpg</a><br>.</em> <a href="http://www[.]hulu[.]com/watch/559035/episode3.mp4" target="_blank" rel="noopener">http://www[.]hulu[.]com/watch/559035/episode3.mp4</a></p><p>These would display a image from an Amazon game called Men of War, whilst the Hulu URL would attempt to stream an episode of an anime called Golden Time.</p><p>It is thought that the purpose of this fake subroutine would be to trick any surface level analysis, or network logging done on the host machine.<br>Sources<br><a href="https://blog.talosintelligence.com/2018/02/group-123-goes-wild.html&quot;&gt;https://blog.talosintelligence.com/2018/02/group-123-goes-wild.html" target="_blank" rel="noopener">https://blog.talosintelligence.com/2018/02/group-123-goes-wild.html&quot;&gt;https://blog.talosintelligence.com/2018/02/group-123-goes-wild.html</a><br><a href="https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/november/rokrat-analysis/&quot;&gt;https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/november/rokrat-analysis/" target="_blank" rel="noopener">https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/november/rokrat-analysis/&quot;&gt;https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/november/rokrat-analysis/</a><br><a href="https://blog.talosintelligence.com/2017/04/introducing-rokrat.html&quot;&gt;https://blog.talosintelligence.com/2017/04/introducing-rokrat.html" target="_blank" rel="noopener">https://blog.talosintelligence.com/2017/04/introducing-rokrat.html&quot;&gt;https://blog.talosintelligence.com/2017/04/introducing-rokrat.html</a><br><a href="http://cwe.mitre.org/data/definitions/416.html&quot;&gt;http://cwe.mitre.org/data/definitions/416.html" target="_blank" rel="noopener">http://cwe.mitre.org/data/definitions/416.html&quot;&gt;http://cwe.mitre.org/data/definitions/416.html</a><br><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-4878#vulnCurrentDescriptionTitle&quot;&gt;https://nvd.nist.gov/vuln/detail/CVE-2018-4878#vulnCurrentDescriptionTitle" target="_blank" rel="noopener">https://nvd.nist.gov/vuln/detail/CVE-2018-4878#vulnCurrentDescriptionTitle&quot;&gt;https://nvd.nist.gov/vuln/detail/CVE-2018-4878#vulnCurrentDescriptionTitle</a></p>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
            <tag> reflections </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
